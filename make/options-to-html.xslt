<?xml version="1.0" encoding="UTF-8" ?>

<!--
    Document   : options-to-html 
    Created on : September 29, 2002 
    Author     : Jens Gulden
    
    Creates a simple HTML-view on all options available to an application, 
    similar to the on generated by GUIApplication.createHelpHTML().
-->

<xsl:stylesheet version="1.0"
    xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
    xmlns:fo="http://www.w3.org/1999/XSL/Format">

    <xsl:output method="html" indent="yes" encoding="UTF-8"/>
    
    <!--
    <xsl:strip-space elements="..."/>
    <xsl:preserve-space elements="..."/>
    -->

    <!-- template rule matching source root element -->
    
    <xsl:template match="/">
        <html>
            <body>
                <xsl:apply-templates select="application/options"/>
            </body>
        </html>
    </xsl:template>

    <xsl:template match="options">
        <table>
            <xsl:apply-templates/>
        </table>
    </xsl:template>

    <xsl:template match="options-group">
        <xsl:apply-templates/>
    </xsl:template>


    <xsl:template match="option[not (@system or @constant)]">

        <tr>
            <td colspan="2">
	                <xsl:if test="@shortcut">
                		<b>-<xsl:value-of select="@shortcut"/></b> or
	                </xsl:if>
                	<b>-<xsl:value-of select="@name"/></b>
                <xsl:if test="(@type) and (@type!='String') and (@type!='java.lang.String')">
					<xsl:variable name="typeName"><xsl:choose><xsl:when test="contains(@type,'.')"><xsl:value-of select="substring-after(substring-after(@type,'.'),'.')"/></xsl:when><xsl:otherwise><xsl:value-of select="@type"/></xsl:otherwise></xsl:choose></xsl:variable>
                
                    [<xsl:value-of select="$typeName"/>]
                </xsl:if>
                <!--
                <xsl:if test="type">
                    [<xsl:value-of select="type"/>]
                </xsl:if>
                -->
            </td>
        </tr>
        <tr>
            <td>&#32;</td>
            <td>
                <xsl:value-of select="metadata/description/langstring"/>
                <xsl:if test="default-value">
                    (Default: <xsl:value-of select="normalize-space(default-value)"/>)
                </xsl:if>
            </td>
        </tr>
    </xsl:template>

    <xsl:template match="*" priority="-1"/>

</xsl:stylesheet> 