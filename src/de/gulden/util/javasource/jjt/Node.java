/* Generated By:JJTree: Do not edit this line. Node.java */

package de.gulden.util.javasource.jjt;

/* All AST nodes must implement this interface.  It provides basic
   machinery for constructing the parent and child relationships
   between nodes. */

public interface Node {

  /** This method is called after the node has been made the current
    node.  It indicates that child nodes can now be added to it. */
  public void jjtOpen();

  /** This method is called after all the child nodes have been
    added. */
  public void jjtClose();

  /** This pair of methods are used to inform the node of its
    parent. */
  public void jjtSetParent(Node n);
  public Node jjtGetParent();

  /** This method tells the node to add its argument to the node's
    list of children.  */
  public void jjtAddChild(Node n, int i);

  /** This method returns a child node.  The children are numbered
     from zero, left to right. */
  public Node jjtGetChild(int i);

  /** Return the number of children the node has. */
  public int jjtGetNumChildren();

  
  /*** added by Jens *********************************************************/

  public int getId();
  
  public Node getChild(int id);
  
  public boolean hasChild(int id);
  
  public Node[] getChildren(int id);
  
  public Node[] getAllChildren();
  
  public String getValue();
  
  public void setValue(String v);
  
  public String getName();
  
  public String retrieveName();
  
  public void setStartToken(Token t);

  public void setEndToken(Token t);
  
  public Token getStartToken();

  public Token getEndToken();

  public void setTextImage(TextImage ti);
  
  public TextImage getTextImage();
  
  public String getSource();
  
  public void setSource(String source);
  
  public int[] getSourcePosition();
}
