<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE application SYSTEM "application.dtd">

<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
<!-- beautyJ 1.0                                                   -->
<!--                                                               -->
<!-- AMODA application descripiton                                 -->
<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
    
<application format-version="0.1"
             batch-mode="no"
             persistent-options="no">
             
    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
    <!-- Metadata                                                  -->
    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
    
    <metadata>
        <name>BeautyJ</name>
        <version>1.0</version>
        <title>
            <langstring>BeautyJ</langstring>
        </title>
        <description>
            <langstring>A Java source code beautifier.</langstring>
        </description>
        <author>Jens Gulden</author>
        <email>beautyj@jensgulden.de</email>
        <license>GPL</license>
        <license-message>
            <langstring>This software comes with no warranty, please see file license.txt.</langstring>
        </license-message>
    </metadata>
    
    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
    <!-- Options                                                   -->
    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
    
    <options>
        <option id="d">
            <!-- REQUIRED -->
            <description>
                <langstring>The directory to output the beautified sources to.</langstring>
            </description>
        </option>
        <option id="sourclet">
            <description>
                <langstring>Full class name of the Sourclet to be used for generating beautified class files.</langstring>
            </description>
            <default-value>
                de.gulden.util.javasource.sourclet.standard.StandardSourclet
            </default-value>
        </option>
        <option id="project.name">
            <description>
                <langstring>The project's name.</langstring>
            </description>
        </option>
        <option id="project.version">
            <description>
                <langstring>The project's version number.</langstring>
            </description>
        </option>
        <option id="project.date">
            <description>
                <langstring>The project's date.</langstring>
            </description>
            <default-value>
                today
            </default-value>
        </option>
        <option id="project.description">
            <description>
                <langstring>Short description of the project.</langstring>
            </description>
        </option>
        <option id="project.headerfile">
            <description>
                <langstring>A text file to insert as header comment (instead of auto-building a header with project and author information).</langstring>
            </description>
        </option>
        <option id="author.name">
            <description>
                <langstring>The author's name.</langstring>
            </description>
        </option>
        <option id="author.email">
            <description>
                <langstring>The author's email address.</langstring>
            </description>
        </option>

        <!-- doc.class - - - - - - - - - - - - - -->
        <options-group id="doc.class.description">
            <option id="doc.class.description.remove.dummy">
                <type>boolean</type>
                <description>
                    <langstring>Remove dummy description from a class's javadoc comment.</langstring>
                </description>
            </option>
            <option id="doc.class.description.remove.empty">
                <type>boolean</type>
                <description>
                    <langstring>Remove empty description from a class's javadoc comment.</langstring>
                </description>
            </option>
            <option id="doc.class.description.remove.text">
                <type>boolean</type>
                <description>
                    <langstring>Remove any description from a class's javadoc comment.</langstring>
                </description>
            </option>
            <option id="doc.class.description.create.dummy">
                <type>boolean</type>
                <description>
                    <langstring>Create dummy description for a class's javadoc comment.</langstring>
                </description>
            </option>
            <option id="doc.class.description.create.text">
                <type>boolean</type>
                <description>
                    <langstring>Create auto-text description for a class's javadoc comment.</langstring>
                </description>
            </option>
        </options-group>
        <options-group id="doc.class.author">
            <option id="doc.class.author.remove.dummy">
                <type>boolean</type>
                <description>
                    <langstring>Remove dummy @author tag from a class's javadoc comment.</langstring>
                </description>
            </option>
            <option id="doc.class.author.remove.empty">
                <type>boolean</type>
                <description>
                    <langstring>Remove empty @author tag from a class's javadoc comment.</langstring>
                </description>
            </option>
            <option id="doc.class.author.remove.text">
                <type>boolean</type>
                <description>
                    <langstring>Remove @author tag from a class's javadoc comment.</langstring>
                </description>
            </option>
            <option id="doc.class.author.create.dummy">
                <type>boolean</type>
                <description>
                    <langstring>Create dummy @author tag for a class's javadoc comment (can be removed in subsequent runs using ...remove.dummy).</langstring>
                </description>
            </option>
            <option id="doc.class.author.create.text">
                <type>boolean</type>
                <description>
                    <langstring>Create @author tag for a class's javadoc comment with the author name set by option -author.name.</langstring>
                </description>
            </option>
        </options-group>
        <options-group id="doc.class.version">
            <option id="doc.class.version.remove.dummy">
                <type>boolean</type>
                <description>
                    <langstring>Remove dummy text from a class's @version tag in the javadoc comment.</langstring>
                </description>
            </option>
            <option id="doc.class.version.remove.empty">
                <type>boolean</type>
                <description>
                    <langstring>Remove empty @version tag from a class's javadoc comment.</langstring>
                </description>
            </option>
            <option id="doc.class.version.remove.text">
                <type>boolean</type>
                <description>
                    <langstring>Remove @version tag from a class's javadoc comment.</langstring>
                </description>
            </option>
            <option id="doc.class.version.create.dummy">
                <type>boolean</type>
                <description>
                    <langstring>Create @version tag for a class's javadoc comment with dummy entry (can be removed in subsequent runs using ...remove.dummy).</langstring>
                </description>
            </option>
            <option id="doc.class.version.create.text">
                <type>boolean</type>
                <description>
                    <langstring>Create @version tag for a class's javadoc comment with the version set by option -version.</langstring>
                </description>
            </option>
        </options-group>

        <!-- doc.method - - - - - - - - - - - - - -->
        <options-group id="doc.method.description">
            <option id="doc.method.description.remove.dummy">
                <type>boolean</type>
                <description>
                    <langstring>Remove dummy description from a method's or constructor's javadoc comment.</langstring>
                </description>
            </option>
            <option id="doc.method.description.remove.empty">
                <type>boolean</type>
                <description>
                    <langstring>Remove empty description from a method's or constructor's javadoc comment.</langstring>
                </description>
            </option>
            <option id="doc.method.description.remove.text">
                <type>boolean</type>
                <description>
                    <langstring>Remove any description from a method's or constructor's javadoc comment.</langstring>
                </description>
            </option>
            <option id="doc.method.description.create.dummy">
                <type>boolean</type>
                <description>
                    <langstring>Create dummy description for a method's or constructor's javadoc comment.</langstring>
                </description>
            </option>
            <option id="doc.method.description.create.text">
                <type>boolean</type>
                <description>
                    <langstring>Create auto-text description for a method's or constructor's javadoc comment.</langstring>
                </description>
            </option>
        </options-group>
        <options-group id="doc.method.param">
            <option id="doc.method.param.remove.dummy">
                <type>boolean</type>
                <description>
                    <langstring>Remove dummy description from a method's or constructor's @param tags.</langstring>
                </description>
            </option>
            <option id="doc.method.param.remove.empty">
                <type>boolean</type>
                <description>
                    <langstring>Remove empty description from a method's or constructor's @param tags.</langstring>
                </description>
            </option>
            <option id="doc.method.param.remove.text">
                <type>boolean</type>
                <description>
                    <langstring>Remove any description from a method's or constructor's @param tags.</langstring>
                </description>
            </option>
            <option id="doc.method.param.create.dummy">
                <type>boolean</type>
                <description>
                    <langstring>Create dummy description for a method's or constructor's @param tags.</langstring>
                </description>
            </option>
            <option id="doc.method.param.create.text">
                <type>boolean</type>
                <description>
                    <langstring>Create auto-text description for a method's or constructor's @param tags.</langstring>
                </description>
            </option>
        </options-group>
        <options-group id="doc.method.return">
            <option id="doc.method.return.remove.dummy">
                <type>boolean</type>
                <description>
                    <langstring>Remove dummy description from a method's @return tag.</langstring>
                </description>
            </option>
            <option id="doc.method.return.remove.empty">
                <type>boolean</type>
                <description>
                    <langstring>Remove empty description from a method's @return tag.</langstring>
                </description>
            </option>
            <option id="doc.method.return.remove.text">
                <type>boolean</type>
                <description>
                    <langstring>Remove any description from a method's @return tag.</langstring>
                </description>
            </option>
            <option id="doc.method.return.create.dummy">
                <type>boolean</type>
                <description>
                    <langstring>Create dummy description for a method's @return tag.</langstring>
                </description>
            </option>
            <option id="doc.method.return.create.text">
                <type>boolean</type>
                <description>
                    <langstring>Create auto-text description for a method's @return tag.</langstring>
                </description>
            </option>
        </options-group>
        <options-group id="doc.method.throws">
            <option id="doc.method.throws.remove.dummy">
                <type>boolean</type>
                <description>
                    <langstring>Remove dummy description from a method's or constructor's @throws tag.</langstring>
                </description>
            </option>
            <option id="doc.method.throws.remove.empty">
                <type>boolean</type>
                <description>
                    <langstring>Remove empty description from a method's or constructor's @throws tag.</langstring>
                </description>
            </option>
            <option id="doc.method.throws.remove.text">
                <type>boolean</type>
                <description>
                    <langstring>Remove any description from a method's or constructor's @throws tag.</langstring>
                </description>
            </option>
            <option id="doc.method.throws.create.dummy">
                <type>boolean</type>
                <description>
                    <langstring>Create dummy description from a method's or constructor's @throws tag.</langstring>
                </description>
            </option>
            <option id="doc.method.throws.create.text">
                <type>boolean</type>
                <description>
                    <langstring>Create auto-text description from a method's or constructor's @throws tag.</langstring>
                </description>
            </option>
        </options-group>

        <!-- doc.field - - - - - - - - - - - - - -->
        <options-group id="doc.field.description">
            <option id="doc.field.description.remove.dummy">
                <type>boolean</type>
                <description>
                    <langstring>Remove dummy description from a field's javadoc comment.</langstring>
                </description>
            </option>
            <option id="doc.field.description.remove.empty">
                <type>boolean</type>
                <description>
                    <langstring>Remove empty description from a field's javadoc comment.</langstring>
                </description>
            </option>
            <option id="doc.field.description.remove.text">
                <type>boolean</type>
                <description>
                    <langstring>Remove any description from a field's javadoc comment.</langstring>
                </description>
            </option>
            <option id="doc.field.description.create.dummy">
                <type>boolean</type>
                <description>
                    <langstring>Create dummy description for a field's javadoc comment.</langstring>
                </description>
            </option>
            <option id="doc.field.description.create.text">
                <type>boolean</type>
                <description>
                    <langstring>Create auto-text description for a field's javadoc comment.</langstring>
                </description>
            </option>
        </options-group>

        <!-- exception.text - - - - - - - - - - - - - -->
        <option id="doc.exception.text">
            <description>
                <langstring>Sets default comment texts for thrown exceptions. The default values need not to be repeated if you want them leave unchanged and add some more. Example: 'MalformedURLException=if the url is not legal,NumberFormatException=if the string does not represent a number'."</langstring>
            </description>
            <!-- copied values from de.gulden.util.javasource.sourcelt.standard.StandardSourclet -->
            <default-value>
                IOException=if an i/o error occurs, SQLException=if a database error occurs, SAXException = if an XML parser error occurs
            </default-value>
        </option>

        <!-- code.clean - - - - - - - - - - - - - -->
        <option id="code.clean">
            <type>boolean</type>
            <description>
                <langstring>Remove out-commented dead lines of code from the inner method bodies. Every line that starts with '//' and ends with ';', '{' or '}' will be removed.</langstring>
            </description>
            <default-value>
                false
            </default-value>
        </option>
        <option id="code.qualify">
            <type>boolean</type>
            <description>
                <langstring>Use fully qualified class names in the generated output. (E.g. use 'java.lang.String' instead of 'String'.) This might be needed in order to avoid ambiguity in class names. Usually, the classes and interfaces used in member signatures are declared by import statements.</langstring>
            </description>
            <default-value>
                false
            </default-value>
        </option>
        <option id="code.separators">
            <type>boolean</type>
            <description>
                <langstring>Insert comment blocks between different types of class members. This highly increases readabilty.</langstring>
            </description>
            <default-value>
                true
            </default-value>
        </option>
        <option id="code.format">
            <type>boolean</type>
            <description>
                <langstring>Format code blocks by auto-indenting the lines to a normalized standard-representation.</langstring>
            </description>
            <default-value>
                false
            </default-value>
        </option>
        <option id="code.indent.spaces">
            <type>int</type>
            <description>
                <langstring>Sets the number of spaces with which auto-indentation gets performed.</langstring>
            </description>
            <default-value>
                4
            </default-value>
        </option>
        
        <!-- xml parameters - - - - - - - - - - - - - -->
        <options-group id="xml">
            <option id="xml.in">
                <type>java.io.File</type>
                <description>
                    <langstring>Read Java source from XML file, not from .java-files. Then beautify and output as .java-files. Use "-xml.in=" without specifying a file name to read from standard in.</langstring>
                </description>
            </option>
            <option id="xml.validate">
                <type>boolean</type>
                <description>
                    <langstring>Validate the input XML against its DTD before parsing. The input file must contain a &lt;!DOCTYPE ..&gt; declaration. Can be used only in combination with -xml.in.</langstring>
                </description>
            </option>
            <option id="xml.out">
                <type>java.io.File</type>
                <description>
                    <langstring>Parse Java source and create XML file, without performing any beautification. Use "-xml.out=" without specifying a file name to write to standard out, in this case option -quiet is implicit.</langstring>
                </description>
            </option>
            <option id="xml.doctype">
                <type>boolean</type>
                <description>
                    <langstring>Include a &lt;!DOCTYPE ..&gt; reference into generated XML. Can be used only in combination with -xml.out.</langstring>
                </description>
            </option>
        </options-group>

    </options>

    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
    <!-- Members                                                   -->
    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
    
    <members>
    
       <!-- Commands - - - - - - - - - - - - - - - - - - - - - - - -->
    
        <!--<command id="b-command" code="b"/>
        <command id="v-command" code="v"/>-->
        
       <!-- Messages - - - - - - - - - - - - - - - - - - - - - - - -->
    
        <message id="message.success">
            <title>
                <langstring>Beautification Successful</langstring>
            </title>
            <text>
                <langstring>Code beautification was successfully performed.</langstring>
            </text>
        </message>
        
        <message id="message.nothingdone">
            <title>
                <langstring>No files to process</langstring>
            </title>
            <text>
                <langstring>Nothing was done.</langstring>
            </text>
        </message>
        
        <message id="message.xmlcreated">
            <title>
                <langstring>XML Created</langstring>
            </title>
            <text>
                <langstring>XML file has been successfully created.</langstring>
            </text>
        </message>
        
    </members>
    
</application>
